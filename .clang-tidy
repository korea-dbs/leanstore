# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# Modified from the Apache Arrow project for the Terrier project.
#
---
Checks:     '
            bugprone-*,
            clang-analyzer-*,
            google-*,
            modernize-*,
            performance-*,
            portability-*,
            readability-*,
            -clang-analyzer-unix.Malloc,
            -clang-diagnostic-vla-cxx-extension,
            -bugprone-easily-swappable-parameters,
            -bugprone-empty-catch,
            -bugprone-exception-escape,
            -bugprone-implicit-widening-of-multiplication-result,
            -bugprone-lambda-function-name,
            -bugprone-macro-parentheses,
            -bugprone-narrowing-conversions,
            -bugprone-reserved-identifier,
            -bugprone-signed-char-misuse,
            -bugprone-suspicious-include,
            -bugprone-unhandled-self-assignment,
            -clang-analyzer-cplusplus.NewDelete,
            -clang-analyzer-cplusplus.NewDeleteLeaks,
            -clang-analyzer-cplusplus.PlacementNew,
            -clang-analyzer-security.insecureAPI.rand,
            -clang-diagnostic-implicit-int-float-conversion,
            -google-default-arguments,
            -google-readability-avoid-underscore-in-googletest-name,
            -google-readability-casting,
            -modernize-avoid-c-arrays,
            -modernize-use-nodiscard,
            -portability-simd-intrinsics,
            -readability-convert-member-functions-to-static,
            -readability-identifier-length,
            -readability-function-cognitive-complexity,
            -readability-magic-numbers,
            -readability-make-member-function-const,
            -readability-qualified-auto,
            -readability-redundant-access-specifiers,
            -readability-redundant-inline-specifier,
            '
CheckOptions:
  - { key: readability-identifier-naming.ClassCase,               value: CamelCase  }
  - { key: readability-identifier-naming.EnumCase,                value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,            value: CamelCase  }
  - { key: readability-identifier-naming.GlobalConstantCase,      value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalVariableCase,      value: lower_case }
  - { key: readability-identifier-naming.ScopedEnumConstantCase,  value: UPPER_CASE }
  - { key: readability-identifier-naming.MemberCase,              value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,           value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix,     value: _          }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,   value: _          }
  - { key: readability-identifier-naming.NamespaceCase,           value: lower_case }
  - { key: readability-identifier-naming.StructCase,              value: CamelCase  }
  - { key: readability-identifier-naming.UnionCase,               value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,            value: lower_case }
WarningsAsErrors: '*'
HeaderFilterRegex: '/(src|test|benchmark)/include'
